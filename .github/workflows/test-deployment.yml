# This is a basic workflow that is manually triggered to deploy alpha build to firebase for testing
name: Test Alpha Deployment

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      flavor:
        type: choice
        description: 'Flavor to build'
        options:
          - demo
          - prod
        required: true
      notes:
        description: 'Notes for this build (optional)'
        default: ''
        required: false
jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Generate Demo Alpha signature file
        if: ${{ github.event.inputs.flavor == 'demo' }}
        run: echo ${{ secrets.DEMO_ALPHA_KEYSTORE_FILE }} | base64 -d > ${{ secrets.ALPHA_KEYSTORE_FILE_PATH }}

      - name: Generate Prod Alpha signature file
        if: ${{ github.event.inputs.flavor == 'prod' }}
        run: echo ${{ secrets.PROD_ALPHA_KEYSTORE_FILE }} | base64 -d > ${{ secrets.ALPHA_KEYSTORE_FILE_PATH }}

      # for experiment purpose, in practice for testing distribution it should build to apk directly instead of building aab then have to build to apk
      # only need to build aab file when deploy to store
      - name: Build Alpha App Bundle
        run: bundle exec fastlane buildAlphaBundle flavor:${{ github.event.inputs.flavor }}

      - name: Get Aab Path
        id: get-app-path
        run: echo "::set-output name=app-path::$(find . -name '*.aab' -print -quit)"

      - name: Demo Build Apk from Abb file
        if: ${{ github.event.inputs.flavor == 'demo' }}
        run: >
          bundle exec fastlane buildUniversalApk
          keystore_path:${{ secrets.ALPHA_KEYSTORE_FILE_PATH }}
          aab_path:"$aab_path"
          apk_output_path:"${aab_path%/*}"
        env:
          keystore_password: ${{ secrets.DEMO_ALPHA_KEYSTORE_PW }}
          keystore_alias: ${{ secrets.DEMO_ALPHA_KEYSTORE_ALIAS }}
          keystore_alias_password: ${{ secrets.DEMO_ALPHA_KEY_PW }}
          aab_path: ${{ steps.get-app-path.outputs.app-path }}

      - name: Prod Build Apk from Abb file
        if: ${{ github.event.inputs.flavor == 'prod' }}
        run: >
          bundle exec fastlane buildUniversalApk
          keystore_path:${{ secrets.ALPHA_KEYSTORE_FILE_PATH }}
          aab_path:"$aab_path"
          apk_output_path:"${aab_path%/*}"
        env:
          keystore_password: ${{ secrets.PROD_ALPHA_KEYSTORE_PW }}
          keystore_alias: ${{ secrets.PROD_ALPHA_KEYSTORE_ALIAS }}
          keystore_alias_password: ${{ secrets.PROD_ALPHA_KEY_PW }}
          aab_path: ${{ steps.get-app-path.outputs.app-path }}

      # If branch is develop, master, release/* branch will get log of commits write into release notes
      # If feature branches: check if input release notes empty then use branch name instead
      - name: Generate release notes
        run: |
            branch_name=${GITHUB_REF#refs/heads/}
            if [[ "$branch_name" == "master" || "$branch_name" == *"release/"* ]]; then
              if [ -z "${{ github.event.inputs.notes }}"]; then
                echo "- Branch: $branch_name" > FirebaseAppDistributionConfig/release_notes.txt
                echo "- Latest commits:" >> FirebaseAppDistributionConfig/release_notes.txt
                git log -10 --pretty=tformat:"  + %s" >> FirebaseAppDistributionConfig/release_notes.txt
              else
                echo "- Note: ${{ github.event.inputs.notes }}" > FirebaseAppDistributionConfig/release_notes.txt
                echo "- Branch: $branch_name" >> FirebaseAppDistributionConfig/release_notes.txt
                echo "- Latest commits:" >> FirebaseAppDistributionConfig/release_notes.txt
                git log -10 --pretty=tformat:"  + %s" >> FirebaseAppDistributionConfig/release_notes.txt
              fi
            else
              if [ -z "${{ github.event.inputs.notes }}"]; then
                echo "- Branch: $branch_name" > FirebaseAppDistributionConfig/release_notes.txt
              else
                echo "- Note: ${{ github.event.inputs.notes }}" > FirebaseAppDistributionConfig/release_notes.txt
                echo "- Branch: $branch_name" >> FirebaseAppDistributionConfig/release_notes.txt
              fi
            fi

      - name: Get Apk Path
        id: get-apk-path
        run: echo "::set-output name=apk-path::$(find . -name '*.apk' -print -quit)"

      - name: Deploy build to Firebase
        run: >
          bundle exec fastlane deployToFirebase
          build_output_path:${{ steps.get-apk-path.outputs.apk-path }}
          flavor:${{ github.event.inputs.flavor }}
        env:
          FIREBASE_CLI_TOKENS: ${{ secrets.FIREBASE_CLI_TOKENS }}

