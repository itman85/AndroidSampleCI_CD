# This is a basic workflow that is manually triggered to deploy alpha build to firebase for testing
name: Test Deployment

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      flavor:
        type: choice
        description: 'Flavor to build'
        options:
          - demo
          - prod
        required: true
      notes:
        description: 'Notes for this build (optional)'
        default: ''
        required: false
jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2 # use latest version?
          bundler-cache: true

      - name: Build App
        run: 'bundle exec fastlane buildDebug flavor:${{ github.event.inputs.flavor }}'

      - name: Get Aab Path
        id: get-app-path
        run: echo "::set-output name=app-path::$(find . -name '*.aab' -print -quit)"

      - name: Build Apk from Abb file
        run: >
          bundle exec fastlane buildUniversalApk
          keystore_path:'keystores/debug.keystore'
          aab_path:"$aab_path"
          apk_output_path:"${aab_path%/*}"
        env:
          keystore_password: ${{ secrets.DEBUG_KEYSTORE_PASSWORD }}
          keystore_alias: ${{ secrets.DEBUG_KEYSTORE_ALIAS }}
          keystore_alias_password: ${{ secrets.DEBUG_KEYSTORE_ALIAS_PASSWORD }}
          aab_path: ${{ steps.get-app-path.outputs.app-path }}

      # echo text >> will append text to file
      # check if input release notes empty then use branch name instead
      - name: Generate release notes
        run: |
            if [[ ${{ github.event.inputs.notes }} != '' ]]; then
              echo ${{ github.event.inputs.notes }} > FirebaseAppDistributionConfig/release_notes.txt
            else
              echo echo ${GITHUB_REF##*/} > FirebaseAppDistributionConfig/release_notes.txt
            fi
        

      - name: Get Apk Path
        id: get-apk-path
        run: echo "::set-output name=apk-path::$(find . -name '*.apk' -print -quit)"

      - name: Deploy build to Firebase
        run: >
          bundle exec fastlane deployToFirebase
          build_output_path:${{ steps.get-apk-path.outputs.apk-path }}
          flavor:${{ github.event.inputs.flavor }}
        env:
          FIREBASE_CLI_TOKENS: ${{ secrets.FIREBASE_CLI_TOKENS }}

